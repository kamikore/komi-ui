@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

/* transition config */
.#{$namespace}-popover-fade {
  &-enter-active,
  &-leave-active {
    transition: opacity 0.5s ease;
  }

  &-enter-from,
  &-leave-to {
    opacity: 0;
  }
}


.#{$namespace}-popover-zoom-in-top {
  &-enter-active,
  &-leave-active {
    opacity: 1;
    transform: scaleY(1);
    transition: all 0.25s ease-in-out;
    transform-origin: center top;
  }

  &-enter-from,
  &-leave-to {
    opacity: 0;
    transform: scaleY(0);
  }

}


@include b(popover) {
    position: absolute;
    z-index: 200;
    background-color: getCssVar('color','white');
    border-radius: getCssVar('border-radius','base');
    color: getCssVar('color','black');
    min-width: 32px;
    line-height: 20px;
    padding: map.get($popover-padding, 'default');
    box-shadow: rgba(0, 0, 0, 0.16) 0px 4px 16px;
    word-wrap: break-word;
    font-size: map.get($popover-font-size, 'default');

    // .ki-popover .ki-popover__arrow
    @include e((arrow)) {
        position: absolute;
        inset: 50% auto auto 50%;
        z-index: getCssVar('index','bottom');

        // 方便定位不采用三角形,而是正方形四个角都能用
        &::before {
          content: ' ';
          position: absolute;
          width: 10px;
          height: 10px;
          // 注意转换顺序
          transform: translate(-50%,-50%) rotate(45deg) ;
          background: getCssVar('color','white');
          box-sizing: border-box;
        }
    }

    @each $size in(large, small) {
        @include m($size) {
            font-size: map.get($popover-font-size, $size);
            padding: map.get($popover-padding, $size);
        }
    }
}


