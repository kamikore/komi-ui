@use 'sass:map';

@use '../common/var' as *;
@use 'function' as *;


// set css var value, because we need translate value to string
// for example:
// @include set-css-var-value(('color', 'primary'), red);
// --ki-color-primary: red;
@mixin set-css-var-value($name, $value) {
    #{joinVarName($name)}: #{$value};
}
  

// 设置root的color var 
@mixin set-css-color-type($colors, $type) {
  // 设置不同场景的主颜色
  @include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));

  // 根据主颜色设置一系列调色板颜色
  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(
      ('color', $type, 'light', $i),
      map.get($colors, $type, 'light-#{$i}')
    );
  }

  @include set-css-var-value(
    ('color', $type, 'dark-2'),
    map.get($colors, $type, 'dark-2')
  );
}


// 遍历变量属性命名为组件变量 button, text-color ==> .ki-button-text-color
// set all css var for component by map
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == 'default' {
      // 对于'default'不会添加前缀 .ki-{$name}
      #{getCssVarName($name)}: #{$value};
    } @else {
      // .ki-{$name}-${attribute}
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  @include set-css-var-value(
    // key: --ki-color-${type}
    ('color', $type, 'rgb'),
    // value: 255 255 255
    #{red($color),  
    green($color),
    blue($color)}
  );
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --ki-button-text-color: var(--ki-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}